{
    "type": [
        2,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.2.2 (2022-10-31 ucrt) -- \"Innocent and Trusting\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from ~/estadisticaII/estadisticaII/.RData]\r\n\r\n",
        "> ",
        "library(stringr) # para cambiar todas las commas a puntos en la columna Ultimo Salario",
        "Warning message:\n",
        "package ‘stringr’ was built under R version 4.2.3 \n",
        "> ",
        "library(ggplot2) # para hacer graficos",
        "Warning message:\n",
        "package ‘ggplot2’ was built under R version 4.2.3 \n",
        "> ",
        "library(cowplot) # facilita creación de gráficos",
        "Warning message:\n",
        "package ‘cowplot’ was built under R version 4.2.3 \n",
        "> ",
        "base_salarios <- read.csv(\"BaseSalarios.csv\",  sep = \";\")",
        "> ",
        "base_salarios$Fec.Nac <- as.Date(base_salarios$Fec.Nac, format = \"%d/%m/%Y\")",
        "> ",
        "colnames(base_salarios)[5] =\"Ultimo.Salario\"",
        "> ",
        "base_salarios <- subset(base_salarios, select = -X)",
        "> ",
        "base_salarios$Ultimo.Salario <- as.numeric(str_replace_all(base_salarios$Ultimo.Salario, \",\", \".\"))",
        "> ",
        "options(scipen = 999) # para que R imprima los números normales",
        "> ",
        "# Creamos dos bases de datos con la info de cuotas y ultimo salario para cada sexo",
        "> ",
        "datos_hombres <- subset(base_salarios,Sexo == '1',select = c('Coutas','Ultimo.Salario'))",
        "> ",
        "datos_mujeres <- subset(base_salarios,Sexo == '2',select = c('Coutas','Ultimo.Salario'))",
        "> ",
        "nrow(datos_hombres) # 32723 hombres",
        "[1] 32723\n",
        "> ",
        "nrow(datos_mujeres) # 73279 mujeres",
        "[1] 73279\n",
        "> ",
        "# Obtenemos el valor maximo, minimo, media y varianza para cada una de las bases de datos para la columna cuotas y ultimo salario",
        "> ",
        "analisis_hombres <- sapply(datos_hombres, function(x) c(max=max(x), min=min(x), mean = mean(x), var=var(x)))",
        "> ",
        "analisis_mujeres <- sapply(datos_mujeres, function(x) c(max=max(x), min=min(x), mean = mean(x), var=var(x)))",
        "> ",
        "grf_1 <- ggplot(base_salarios, aes(x=as.factor(Sexo), y=Ultimo.Salario)) + geom_boxplot(fill = c(\"lightskyblue4\", \"lightskyblue2\"))  + cowplot::theme_cowplot() + scale_y_continuous(",
        "+ ",
        "    breaks = seq(min(base_salarios$Ultimo.Salario), max(base_salarios$Ultimo.Salario), length.out = 10), ",
        "+ ",
        "    labels = scales::comma_format(scale = 1e-3)) + labs(x= \"Sexo\", y=\"Ultimo salario reportado\") +",
        "+ ",
        "    scale_x_discrete(labels = c(\"Hombre\", \"Mujer\")) ",
        "> ",
        "print(grf_1)",
        "> ",
        "t.test(datos_hombres$Ultimo.Salario,datos_mujeres$Ultimo.Salario, alternative = \"greater\")",
        "\n\tWelch Two Sample t-test\n\ndata:  datos_hombres$Ultimo.Salario and datos_mujeres$Ultimo.Salario\nt = 25.046, df = 49886, p-value < 0.00000000000000022\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n 103280.3      Inf\nsample estimates:\nmean of x mean of y \n  1157202   1046661 \n\n",
        "> ",
        "# Creamos un histograma con los salarios",
        "> ",
        "ult.salario <- base_salarios$Ultimo.Salario",
        "> ",
        "media_salarios <- mean(ult.salario)",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Frecuencia\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20)",
        "> ",
        "abline(v = media_salarios, col = \"red\", lty = 2, lwd = 2, legend = TRUE)",
        "Warning message:\n",
        "In int_abline(a = a, b = b, h = h, v = v, untf = untf, ...) :",
        "\n ",
        " \"legend\" is not a graphical parameter\n",
        "> ",
        "legend(\"topright\", legend = c(\"Media\"), col = c(\"red\"), lty = c(2), lwd = c(2))",
        "Warning messages:\n",
        "1: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " \"legend\" is not a graphical parameter\n",
        "2: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " \"legend\" is not a graphical parameter\n",
        "> ",
        "density_biweight <- density(ult.salario,kernel = \"biweight\")",
        "Warning messages:\n",
        "1: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " \"legend\" is not a graphical parameter\n",
        "2: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " \"legend\" is not a graphical parameter\n",
        "> ",
        "plot(density_biweight, main = \"Biweight kernel\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Biweight\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_biweight,lwd=2,lty=1)",
        "> ",
        "density_normal <- density(ult.salario,kernel = \"gaussian\")",
        "> ",
        "plot(density_normal, main = \"Normal kernel\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Normal\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_normal,lwd=2,lty=1)",
        "> ",
        "density_epanechnikov <- density(ult.salario,kernel = \"epanechnikov\")",
        "> ",
        "plot(density_epanechnikov, main = \"Epanechnikov kernel\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Normal\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_normal,lwd=2,lty=1)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "density_epanechnikov <- density(ult.salario,kernel = \"epanechnikov\")",
        "> ",
        "plot(density_epanechnikov, main = \"Epanechnikov kernel\", ylab = \"Densidad\")",
        "> ",
        "density_epanechnikov <- density(ult.salario,kernel = \"epanechnikov\")",
        "> ",
        "plot(density_normal, main = \"Normal kernel\", ylab = \"Densidad\")",
        "> ",
        "lines(density_normal,lwd=2,lty=1)",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Normal\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_normal,lwd=2,lty=1)",
        "> ",
        "density_coseno <- density(ult.salario,kernel = \"cosine\")",
        "> ",
        "plot(density_coseno, main = \"Coseno kernel\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Normal\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_coseno,lwd=2,lty=1)",
        "> ",
        "density_coseno <- density(ult.salario,kernel = \"cosine\")",
        "> ",
        "plot(density_coseno, main = \"Coseno kernel\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Coseno\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_coseno,lwd=2,lty=1)",
        "> ",
        "density_uniforme <- density(ult.salario,kernel = \"rectangular\")",
        "> ",
        "plot(density_uniforme, main = \"Kernel Uniforme\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Uniforme\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_uniforme,lwd=2,lty=1)",
        "> ",
        "density_triangular <- density(ult.salario,kernel = \"triangular\")",
        "> ",
        "plot(density_triangular, main = \"Kernel Uniforme\", ylab = \"Densidad\")",
        "> ",
        "plot(density_triangular, main = \"Kernel Triangular\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Uniforme\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_triangular,lwd=2,lty=1)",
        "> ",
        "density_triangular <- density(ult.salario,kernel = \"triangular\", bw = \"nrd0\")",
        "> ",
        "plot(density_triangular, main = \"Kernel Triangular\", ylab = \"Densidad\")",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Uniforme\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "lines(density_triangular,lwd=2,lty=1)",
        "> ",
        "",
        "> ",
        "hist(ult.salario,",
        "+ ",
        "     main = \"Histograma de últimos salarios con kernel Uniforme\",",
        "+ ",
        "     xlab = \"Salarios\",",
        "+ ",
        "     ylab = \"Densidad\",",
        "+ ",
        "     col = \"lightskyblue2\", breaks=20, freq = FALSE, ylim = c(0, 0.0000008))",
        "> ",
        "# a. Biweight",
        "> ",
        "lines(density_biweight, lwd = 2, lty = 1, col = \"RoyalBlue\")",
        "> ",
        "# b. Normal o Gaussiano",
        "> ",
        "lines(density_normal, lwd = 2, lty = 1, col = \"SteelBlue\")",
        "> ",
        "# c. Epanechnikov",
        "> ",
        "lines(density_epanechnikov, lwd = 2, lty = 1, col = \"CornflowerBlue\")",
        "> ",
        "# d. Coseno",
        "> ",
        "lines(density_coseno, lwd = 2, lty = 1, col = \"MediumSlateBlue\")",
        "> ",
        "# e. Rectangular o uniforme",
        "> ",
        "lines(density_uniforme, lwd = 2, lty = 1, col = \"DodgerBlue\")",
        "> ",
        "# f. Triangular",
        "> ",
        "lines(density_triangular, lwd = 2, lty = 1, col = \"SkyBlue\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# a. Biweight",
        "> ",
        "lines(density_biweight, lwd = 2, lty = 1, col = \"cyan4\")",
        "> ",
        "# b. Normal o Gaussiano",
        "> ",
        "lines(density_normal, lwd = 2, lty = 1, col = \"red2\")",
        "> ",
        "# c. Epanechnikov",
        "> ",
        "lines(density_epanechnikov, lwd = 2, lty = 1, col = \"seagreen\")",
        "> ",
        "# d. Coseno",
        "> ",
        "lines(density_coseno, lwd = 2, lty = 1, col = \"hotpink2\")",
        "> ",
        "# d. Coseno",
        "> ",
        "lines(density_coseno, lwd = 2, lty = 1, col = \"hotpink3\")",
        "> ",
        "# e. Rectangular o uniforme",
        "> ",
        "lines(density_uniforme, lwd = 2, lty = 1, col = \"goldenrod2\")",
        "> ",
        "# a. Biweight",
        "> ",
        "lines(density_biweight, lwd = 2, lty = 1, col = \"cyan4\")",
        "> ",
        "# b. Normal o Gaussiano",
        "> ",
        "lines(density_normal, lwd = 2, lty = 1, col = \"red2\")",
        "> ",
        "# c. Epanechnikov",
        "> ",
        "lines(density_epanechnikov, lwd = 2, lty = 1, col = \"seagreen\")",
        "> ",
        "# d. Coseno",
        "> ",
        "lines(density_coseno, lwd = 2, lty = 1, col = \"hotpink1\")",
        "> ",
        "# e. Rectangular o uniforme",
        "> ",
        "lines(density_uniforme, lwd = 2, lty = 1, col = \"goldenrod2\")",
        "> ",
        "# f. Triangular",
        "> ",
        "lines(density_triangular, lwd = 2, lty = 1, col = \"blue2\")",
        "> ",
        "# f. Triangular",
        "> ",
        "lines(density_triangular, lwd = 2, lty = 1, col = \"blue2\")",
        "> ",
        "# e. Rectangular o uniforme",
        "> ",
        "lines(density_uniforme, lwd = 2, lty = 1, col = \"goldenrod2\")",
        "> ",
        "# d. Coseno",
        "> ",
        "lines(density_coseno, lwd = 2, lty = 1, col = \"hotpink1\")",
        "> ",
        "# c. Epanechnikov",
        "> ",
        "lines(density_epanechnikov, lwd = 2, lty = 1, col = \"seagreen\")",
        "> ",
        "# b. Normal o Gaussiano",
        "> ",
        "lines(density_normal, lwd = 2, lty = 1, col = \"red2\")",
        "> ",
        "# a. Biweight",
        "> ",
        "lines(density_biweight, lwd = 2, lty = 1, col = \"cyan4\")",
        "> ",
        "legend(\"topright\", legend = c(\"Biweight\", \"Normal\", \"Epanechnikov\", \"Coseno\", \"Rectangular\", \"Triangular\"),",
        "+ ",
        "       col = c(\"cyan4\", \"red2\", \"seagreen\", \"hotpink1\", \"goldenrod2\", \"blue2\"),",
        "+ ",
        "       lty = 1, lwd = 2)",
        "> ",
        "install.packages(\"univariateML\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\n",
        "Installing package into ‘C:/Users/monts/AppData/Local/R/win-library/4.2’\n(as ‘lib’ is unspecified)\n",
        "also installing the dependencies ‘rbibutils’, ‘gss’, ‘stabledist’, ‘gbutils’, ‘Rdpack’, ‘expint’, ‘fBasics’, ‘timeDate’, ‘timeSeries’, ‘fastICA’, ‘cvar’, ‘extraDistr’, ‘logitnorm’, ‘actuar’, ‘nakagami’, ‘fGarch’\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/rbibutils_2.2.16.zip'\n",
        "Content type 'application/zip'",
        " length 763875 bytes (745 KB)\n",
        "downloaded 745 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/gss_2.2-7.zip'\n",
        "Content type 'application/zip'",
        " length 1693987 bytes (1.6 MB)\n",
        "downloaded 1.6 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/stabledist_0.7-1.zip'\n",
        "Content type 'application/zip'",
        " length 76014 bytes (74 KB)\n",
        "downloaded 74 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/gbutils_0.5.zip'\n",
        "Content type 'application/zip'",
        " length 238944 bytes (233 KB)\n",
        "downloaded 233 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/Rdpack_2.6.zip'\n",
        "Content type 'application/zip'",
        " length 747274 bytes (729 KB)\n",
        "downloaded 729 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/expint_0.1-8.zip'\n",
        "Content type 'application/zip'",
        " length 222433 bytes (217 KB)\n",
        "downloaded 217 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/fBasics_4032.96.zip'\n",
        "Content type 'application/zip'",
        " length 2704116 bytes (2.6 MB)\n",
        "downloaded 2.6 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/timeDate_4032.109.zip'\n",
        "Content type 'application/zip'",
        " length 1419781 bytes (1.4 MB)\n",
        "downloaded 1.4 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/timeSeries_4032.108.zip'\n",
        "Content type 'application/zip'",
        " length 2096172 bytes (2.0 MB)\n",
        "downloaded 2.0 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/fastICA_1.2-4.zip'\n",
        "Content type 'application/zip'",
        " length 47664 bytes (46 KB)\n",
        "downloaded 46 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/cvar_0.5.zip'\n",
        "Content type 'application/zip'",
        " length 258885 bytes (252 KB)\n",
        "downloaded 252 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/extraDistr_1.10.0.zip'\n",
        "Content type 'application/zip'",
        " length 970845 bytes (948 KB)\n",
        "downloaded 948 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/logitnorm_0.8.38.zip'\n",
        "Content type 'application/zip'",
        " length 209364 bytes (204 KB)\n",
        "downloaded 204 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/actuar_3.3-4.zip'\n",
        "Content type 'application/zip'",
        " length 1481038 bytes (1.4 MB)\n",
        "downloaded 1.4 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/nakagami_1.1.0.zip'\n",
        "Content type 'application/zip'",
        " length 156065 bytes (152 KB)\n",
        "downloaded 152 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/fGarch_4031.90.zip'\n",
        "Content type 'application/zip'",
        " length 682586 bytes (666 KB)\n",
        "downloaded 666 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/univariateML_1.1.1.zip'\n",
        "Content type 'application/zip'",
        " length 393988 bytes (384 KB)\n",
        "downloaded 384 KB\n\n",
        "package ‘rbibutils’ successfully unpacked and MD5 sums checked\npackage ‘gss’ successfully unpacked and MD5 sums checked\npackage ‘stabledist’ successfully unpacked and MD5 sums checked\npackage ‘gbutils’ successfully unpacked and MD5 sums checked\npackage ‘Rdpack’ successfully unpacked and MD5 sums checked\npackage ‘expint’ successfully unpacked and MD5 sums checked\npackage ‘fBasics’ successfully unpacked and MD5 sums checked\npackage ‘timeDate’ successfully unpacked and MD5 sums checked\n",
        "package ‘timeSeries’ successfully unpacked and MD5 sums checked\npackage ‘fastICA’ successfully unpacked and MD5 sums checked\npackage ‘cvar’ successfully unpacked and MD5 sums checked\npackage ‘extraDistr’ successfully unpacked and MD5 sums checked\npackage ‘logitnorm’ successfully unpacked and MD5 sums checked\npackage ‘actuar’ successfully unpacked and MD5 sums checked\npackage ‘nakagami’ successfully unpacked and MD5 sums checked\npackage ‘fGarch’ successfully unpacked and MD5 sums checked\n",
        "package ‘univariateML’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\monts\\AppData\\Local\\Temp\\Rtmpyi1ho6\\downloaded_packages\n",
        "> ",
        "library(univariateML)",
        "Warning message:\n",
        "package ‘univariateML’ was built under R version 4.2.3 \n",
        "> ",
        "model_select(",
        "+ ",
        "  ult.salario,",
        "+ ",
        "  models = univariateML_models,",
        "+ ",
        "  criterion = c(\"aic\", \"bic\", \"loglik\"),",
        "+ ",
        "  na.rm = FALSE,",
        "+ ",
        ")",
        "Maximum likelihood estimates for the Skew Student-t model \n       mean           sd           nu           xi  \n1064175.978   619620.904       42.969        2.402  \n\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"rriskDistributions\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"rriskDistributions\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ]
}